# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from server.models.base_model_ import Model
from server import util


class TemplateInfo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, number: str=None, _date: str=None, message: str=None):  # noqa: E501
        """TemplateInfo - a model defined in Swagger

        :param number: The number of this TemplateInfo.  # noqa: E501
        :type number: str
        :param _date: The _date of this TemplateInfo.  # noqa: E501
        :type _date: str
        :param message: The message of this TemplateInfo.  # noqa: E501
        :type message: str
        """
        self.swagger_types = {
            'number': str,
            '_date': str,
            'message': str
        }

        self.attribute_map = {
            'number': 'number',
            '_date': 'date',
            'message': 'message'
        }
        self._number = number
        self.__date = _date
        self._message = message

    @classmethod
    def from_dict(cls, dikt) -> 'TemplateInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The templateInfo of this TemplateInfo.  # noqa: E501
        :rtype: TemplateInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def number(self) -> str:
        """Gets the number of this TemplateInfo.


        :return: The number of this TemplateInfo.
        :rtype: str
        """
        return self._number

    @number.setter
    def number(self, number: str):
        """Sets the number of this TemplateInfo.


        :param number: The number of this TemplateInfo.
        :type number: str
        """
        if number is None:
            raise ValueError("Invalid value for `number`, must not be `None`")  # noqa: E501

        self._number = number

    @property
    def _date(self) -> str:
        """Gets the _date of this TemplateInfo.


        :return: The _date of this TemplateInfo.
        :rtype: str
        """
        return self.__date

    @_date.setter
    def _date(self, _date: str):
        """Sets the _date of this TemplateInfo.


        :param _date: The _date of this TemplateInfo.
        :type _date: str
        """

        self.__date = _date

    @property
    def message(self) -> str:
        """Gets the message of this TemplateInfo.


        :return: The message of this TemplateInfo.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message: str):
        """Sets the message of this TemplateInfo.


        :param message: The message of this TemplateInfo.
        :type message: str
        """

        self._message = message
